// *******************************************************************
//   (C) Copyright 2014 Leiden Institute of Advanced Computer Science
//   Universiteit Leiden
//   All Rights Reserved
// *******************************************************************
// Open Dag 21 maart 2014 --- King of the Jungle
// *******************************************************************
// FILE INFORMATION:
//   File:     movement.h (Implementation file: movement.cc)
//   Author:   Jonathan K. Vis
//   Revision: 0.01a
//   Date:     2014/03/18
// *******************************************************************
// DESCRIPTION:
//   Beschrijving van de bewegingen van de stukken.
// *******************************************************************

#ifndef __movement_h__
#define __movement_h__

#include "types.h"

#include <cassert>

// *******************************************************************
// FUNCTION is_vertical: gebruikt voor verticale sprongen
// *******************************************************************
bool is_vertical(uint32_t const direction);

// *******************************************************************
// FUNCTION can_move: gegeven een stuk, zijn locatie en een richting
// wordt er bepaald of dit in beginsel mogelijk is (sprongen zijn
// in dit opzicht bijzonder) en de parameter `to' wordt op de geldige
// locatie index gezet.
// *******************************************************************
bool can_move(uint32_t const piece,
              uint32_t const from,
              uint32_t const direction,
              uint32_t      &to);

static uint32_t const STEP_NORTH = 0;
static uint32_t const STEP_EAST  = 1;
static uint32_t const STEP_SOUTH = 2;
static uint32_t const STEP_WEST  = 3;
static uint32_t const LEAP_NORTH = 4;
static uint32_t const LEAP_EAST  = 5;
static uint32_t const LEAP_SOUTH = 6;
static uint32_t const LEAP_WEST  = 7;

static uint32_t const MOVEMENT[PIECES][BOARD_SIZE] =
{
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_RAT
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_RAT
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_CAT
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_CAT
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_WOLF
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_WOLF
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_DOG
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_DOG
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_PANTHER
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_PANTHER
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 75, 75, 15, 75, 75, 13,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    7, 30, 30, 15, 30, 30, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_TIGER
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 75, 75, 15, 75, 75, 13,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    7, 30, 30, 15, 30, 30, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_TIGER
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 75, 75, 15, 75, 75, 13,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    7, 30, 30, 15, 30, 30, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_LION
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 75, 75, 15, 75, 75, 13,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    37, 0, 0, 165, 0, 0, 133,
    7, 30, 30, 15, 30, 30, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  }, // BLACK_LION
  {
    6, 14, 14, 14, 14, 14, 12,
    7, 15, 15, 15, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 11, 15, 15, 13,
    3, 11, 9, 0, 3, 11, 9,
    0
  }, // WHITE_ELEPHANT
  {
    6, 14, 12, 0, 6, 14, 12,
    7, 15, 15, 14, 15, 15, 13,
    7, 11, 11, 15, 11, 11, 13,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    5, 0, 0, 5, 0, 0, 5,
    7, 14, 14, 15, 14, 14, 13,
    7, 15, 15, 15, 15, 15, 13,
    3, 11, 11, 11, 11, 11, 9,
    0
  } // BLACK_ELEPHANT
}; // MOVEMENT

static uint32_t const MOVEMENT_MASK[LEAP_WEST + 1] =
{
    1, // STEP_NORTH
    2, // STEP_EAST
    4, // STEP_SOUTH
    8, // STEP_WEST
   16, // LEAP_NORTH
   32, // LEAP_EAST
   64, // LEAP_SOUTH
  128  // LEAP_WEST
}; // MOVEMENT_MASK

static int const MOVEMENT_OFFSET[LEAP_WEST + 1] =
{
   -7, // STEP_NORTH
    1, // STEP_EAST
    7, // STEP_SOUTH
   -1, // STEP_WEST
  -28, // LEAP_NORTH
    3, // LEAP_EAST
   28, // LEAP_SOUTH
   -3  // LEAP_WEST
}; // MOVEMENT_OFFSET

#endif // __movement_h__

